name: Proto Breaking Change Detector

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**/*.proto'

permissions:
  contents: read
  issues: write

jobs:
  proto-breaking-change:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr-code

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          path: base-code

      - name: Install Proto Breaking Change Detector
        run: |
          pip install git+https://github.com/googleapis/proto-breaking-change-detector.git@619ad383fcc888a6586ef3e8ff14f10398f0322e

      - name: Run breaking-change check
        id: run-detector
        run: |
          proto-breaking-change-detector \
            --original_api_definition_dirs base-code/ \
            --update_api_definition_dirs   pr-code/  \
            --human_readable_message       \
            --no_line_numbers              \
            --output_json_path breaking-report.json \
            > breaking-report.txt
          echo "Detector exit code: $?"

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('breaking-report.txt', 'utf8').trim();
            const prNumber = context.payload.pull_request.number;
            let body;
            if (report.length > 0) {
              const snippet = report.length > 64000 ? report.slice(0, 64000) + '\n...[truncated]' : report;
              body = "## 🔍 Proto Breaking Change Report\n```text\n" + snippet + "\n```";
            } else {
              body = "## 🔍 Proto Breaking Change Report\n*No breaking changes detected.*";
            }
            return github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: body,
            });
